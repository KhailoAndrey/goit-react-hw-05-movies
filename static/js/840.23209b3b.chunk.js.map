{"version":3,"file":"static/js/840.23209b3b.chunk.js","mappings":"8QAEaA,EAAaC,EAAAA,GAAAA,IAAH,iGAOVC,EAAaD,EAAAA,GAAAA,OAAH,8IAUVE,EAAUF,EAAAA,GAAAA,IAAH,sF,0BCwFpB,EA5FqB,WACnB,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAWC,EAAAA,EAAAA,MAgCjB,IA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,4HAEOC,EAAAA,EAAAA,GAAM,GAAD,OAdzB,uCAcyB,OAAUX,EAAV,oBAflB,qCAaM,OAERY,EAFQ,SAUVA,EAAOC,KANTC,EAJY,EAIZA,MACAC,EALY,EAKZA,YACAC,EANY,EAMZA,OACAC,EAPY,EAOZA,SACAC,EARY,EAQZA,aACAC,EATY,EASZA,aAEFf,EAAU,CACRU,MAAAA,EACAC,YAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,aAAAA,EACAC,aAAAA,IAjBY,sDAoBdC,MAAM,+BApBQ,8DAAH,qDAwBfV,GACD,GAAE,CAACV,KAECG,EACH,OAAO,sCAET,IAAMkB,EAAY,IAAIC,KAAKnB,EAAOe,cAAcK,cAChD,OACE,iCACE,UAACzB,EAAD,CAAY0B,QApCI,0BAAMjB,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUoB,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IAAxC,EAoChB,WACE,SAAC,MAAD,IADF,cAIA,UAAC9B,EAAD,YACE,gBACE+B,IACExB,EAAOY,YAAP,yCACsCZ,EAAOY,aACzC,wDAENa,IAAKzB,EAAOW,SAEd,4BACE,kCAAQX,EAAOW,MAAf,aAAyBO,EAAzB,QACA,yCAAuC,GAAtBlB,EAAOgB,cAAmBU,UAA3C,QACA,qCACE1B,EAAOc,UAGP,uBAAId,EAAOc,YAFX,2DAIF,mCAC0B,IAAzBd,EAAOa,OAAOc,QACb,gEAEA,uBAAI3B,EAAOa,OAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAItD,UAACnC,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMoC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAC,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,MA3CJ,MAgDH,C","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieBlock = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n  margin-right: 50px;\n`;\n\nexport const ButtonBack = styled.button`\n  margin: 10px;\n  border-radius: 8px;\n  color: blue;\n  background-color: grey;\n  &:hover {\n    scale: 1.3;\n  }\n`;\n\nexport const AddInfo = styled.div`\n  margin: 10px;\n  border: 2px solid #0af;\n  padding: 10px;\n`;\n","import axios from 'axios';\nimport { Suspense, useEffect, useState } from 'react';\nimport { TiArrowLeftThick } from 'react-icons/ti';\nimport { AddInfo, ButtonBack, MovieBlock } from './MovieDetails.styled';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\n\nconst api_key = 'cbd8bb6ab7443496075b168356471aed';\nconst url = `https://api.themoviedb.org/3/movie/`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n\n  const navigate = useNavigate();\n\n  const handleClick = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`${url}${movieId}?api_key=${api_key}`);\n        const {\n          title,\n          poster_path,\n          genres,\n          overview,\n          release_date,\n          vote_average,\n        } = result.data;\n        setMovies({\n          title,\n          poster_path,\n          genres,\n          overview,\n          release_date,\n          vote_average,\n        });\n      } catch (error) {\n        alert('Ooops... Something wrong...');\n        throw error;\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  if (!movies) {\n    return <b>Loading...</b>;\n  }\n  const movieDate = new Date(movies.release_date).getFullYear();\n  return (\n    <>\n      <ButtonBack onClick={handleClick}>\n        <TiArrowLeftThick />\n        Go back\n      </ButtonBack>\n      <MovieBlock>\n        <img\n          src={\n            movies.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movies.poster_path}`\n              : 'https://via.placeholder.com/185x278.png?text=No+Image'\n          }\n          alt={movies.title}\n        />\n        <div>\n          <h1>{`${movies.title} (${movieDate})`}</h1>\n          <p>User Score: {(movies.vote_average * 10).toFixed()}%</p>\n          <h2>Overview</h2>\n          {!movies.overview ? (\n            <p>No overview information found.</p>\n          ) : (\n            <p>{movies.overview}</p>\n          )}\n          <h2>Genres</h2>\n          {movies.genres.length === 0 ? (\n            <p>No information on genres was found.</p>\n          ) : (\n            <p>{movies.genres.map(genre => genre.name).join(', ')}</p>\n          )}\n        </div>\n      </MovieBlock>\n      <AddInfo>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </AddInfo>\n      <Suspense fallback={<b> Loading...</b>}>\n        <Outlet />\n      </Suspense>\n      ;\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieBlock","styled","ButtonBack","AddInfo","movieId","useParams","useState","movies","setMovies","location","useLocation","navigate","useNavigate","useEffect","fetchData","axios","result","data","title","poster_path","genres","overview","release_date","vote_average","alert","movieDate","Date","getFullYear","onClick","state","from","src","alt","toFixed","length","map","genre","name","join","to","Suspense","fallback"],"sourceRoot":""}