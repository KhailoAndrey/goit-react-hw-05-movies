{"version":3,"file":"static/js/884.15018bd1.chunk.js","mappings":"iOA2EA,UApEqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAGAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,qGACKC,EAAAA,EAAAA,GAAM,GAAD,OATvB,uCASuB,OAAUP,EAAV,oBAVhB,qCASM,OACVQ,EADU,OAEhBC,QAAQC,IAAIF,EAAOG,MACnBP,EAAUI,EAAOG,MAHD,2CAAH,qDAKfL,GACD,GAAE,CAACN,IAYJ,IAAMY,EAAY,IAAIC,KAAKV,EAAOW,cAAcC,cAChD,OACE,iCACE,4BACE,gBACEC,IACEb,EAAOc,YAAP,yCACsCd,EAAOc,aACzC,wDAENC,IAAI,MAEN,4BACE,kCAAQf,EAAOgB,MAAf,aAAyBP,EAAzB,QACA,yCAAuC,GAAtBT,EAAOiB,cAAmBC,UAA3C,QACA,qCACElB,EAAOmB,UAGP,uBAAInB,EAAOmB,YAFX,2DAIF,mCAC0B,IAAzBnB,EAAOoB,OAAOC,QACb,gEAEA,uBAAIrB,EAAOoB,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAKtD,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\n\nconst api_key = 'cbd8bb6ab7443496075b168356471aed';\nconst url = `https://api.themoviedb.org/3/movie/`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState([]);\n\n  //   console.log(movieId);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(`${url}${movieId}?api_key=${api_key}`);\n      console.log(result.data);\n      setMovies(result.data);\n    };\n    fetchData();\n  }, [movieId]);\n\n\n  // const {\n  //   // id,\n  //   title,\n  //   poster_path,\n  //   genres,\n  //   overview,\n  //   release_date,\n  //   vote_average,\n  // } = movies;\n  const movieDate = new Date(movies.release_date).getFullYear();\n  return (\n    <>\n      <div>\n        <img\n          src={\n            movies.poster_path\n              ? `https://image.tmdb.org/t/p/w200${movies.poster_path}`\n              : 'https://via.placeholder.com/185x278.png?text=No+Image'\n          }\n          alt=\"\"\n        />\n        <div>\n          <h1>{`${movies.title} (${movieDate})`}</h1>\n          <p>User Score: {(movies.vote_average * 10).toFixed()}%</p>\n          <h2>Overview</h2>\n          {!movies.overview ? (\n            <p>No overview information found.</p>\n          ) : (\n            <p>{movies.overview}</p>\n          )}\n          <h2>Genres</h2>\n          {movies.genres.length === 0 ? (\n            <p>No information on genres was found.</p>\n          ) : (\n            <p>{movies.genres.map(genre => genre.name).join(', ')}</p>\n          )}\n        </div>\n      </div>\n\n      <h4>Additional information</h4>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movies","setMovies","useEffect","fetchData","axios","result","console","log","data","movieDate","Date","release_date","getFullYear","src","poster_path","alt","title","vote_average","toFixed","overview","genres","length","map","genre","name","join","to"],"sourceRoot":""}